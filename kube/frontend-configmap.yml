# frontend-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Task Management</title>
    </head>
    <body>
        <h1>Task Manager</h1>

        <!-- Add Task Form -->
        <form id="taskForm">
            <input type="text" id="taskDescription" placeholder="Enter task description" required>
            <button type="submit">Add Task</button>
        </form>

        <ul id="taskList"></ul>

        <script>
            const API_URL = 'http://localhost:5000/tasks';  // Flask API URL

            // Fetch all tasks
            async function fetchTasks() {
                const response = await fetch(API_URL);
                const tasks = await response.json();
                const taskList = document.getElementById('taskList');
                taskList.innerHTML = '';
                tasks.forEach(task => {
                    const taskItem = document.createElement('li');
                    
                    // Create task description input
                    const taskDescription = document.createElement('input');
                    taskDescription.type = 'text';
                    taskDescription.value = task.description;
                    taskDescription.addEventListener('change', () => {
                        updateTask(task.id, { description: taskDescription.value });
                    });
                    
                    // Create checkbox for marking task complete
                    const taskCompleteCheckbox = document.createElement('input');
                    taskCompleteCheckbox.type = 'checkbox';
                    taskCompleteCheckbox.checked = task.is_completed;
                    taskCompleteCheckbox.addEventListener('change', () => {
                        updateTask(task.id, { is_completed: taskCompleteCheckbox.checked });
                    });
                    
                    // Delete button
                    const deleteButton = document.createElement('button');
                    deleteButton.innerText = 'Delete';
                    deleteButton.addEventListener('click', () => {
                        deleteTask(task.id);
                    });

                    taskItem.appendChild(taskCompleteCheckbox);
                    taskItem.appendChild(taskDescription);
                    taskItem.appendChild(deleteButton);
                    taskList.appendChild(taskItem);
                });
            }

            // Add a new task
            document.getElementById('taskForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const description = document.getElementById('taskDescription').value;

                await fetch(API_URL, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ description }),
                });

                document.getElementById('taskDescription').value = '';
                fetchTasks();  // Reload task list
            });

            // Update task (for description or completion)
            async function updateTask(id, updates) {
                await fetch(`${API_URL}/${id}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(updates),
                });
                fetchTasks();
            }

            // Delete task
            async function deleteTask(id) {
                await fetch(`${API_URL}/${id}`, {
                    method: 'DELETE',
                });
                fetchTasks();
            }

            // Load tasks on page load
            window.onload = fetchTasks;
        </script>
    </body>
    </html>
